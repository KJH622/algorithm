# 성실한 개미

# 그 개미는 개미굴에서 나와 먹이까지 가장 빠른 길로 이동한다.
# 개미는 오른쪽으로 움직이다가 벽을 만나면 아래쪽으로 움직여 가장 빠른 길로 움직였다.
# (오른쪽에 길이 나타나면 다시 오른쪽으로 움직인다.)
# 미로 상자에 넣은 개미는 먹이를 찾았거나, 더 이상 움직일 수 없을 때까지
# 오른쪽 또는 아래쪽으로만 움직였다.
# 미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,
# 먹이가 2로 주어질 때, 성실한 개미의 이동 경로를 예상해보자.

# 맨 아래의 가장 오른쪽에 도착한 경우, 더 이상 움직일 수 없는 경우, 
# 먹이를 찾은 경우에는 더 이상 이동하지 않고 그 곳에 머무른다고 가정한다.
# 미로 상자의 테두리는 모두 벽으로 되어 있으며,
# 개미집은 반드시 (2, 2)에 존재하기 때문에 개미는 (2, 2)에서 출발한다.
# 개미가 이동한 경로를 9로 표시해 출력합니다.

d = []

for i in range(10): # 0~9
    d.append(list(map(int, input().split())))

# 출발지점이 (2, 2)이므로 인덱스는 0번부터이기 때문에 출발지점 인덱스는 1이다.
x = 1
y = 1

while True:
    if (d[x][y] == 0):
        d[x][y] = 9
    elif (d[x][y] == 2): # 먹이를 찾은 경우
        d[x][y] = 9
        break

    # 맨 아래의 가장 오른쪽 or 더 이상 움직일 수 없는 경우
    if (x == 8 and y == 8) or (d[x][y+1] == 1 and d[x+1][y] == 1):
        break

    if d[x][y+1] != 1:
        y += 1
    elif d[x+1][y] != 1:
        x += 1

for i in range(10):
    for j in range(10):
        print(d[i][j], end = ' ')
    print()